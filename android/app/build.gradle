def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: '../config/quality.gradle'
apply from: '../config/jacoco.gradle'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.res.srcDirs += 'src/main/res-awaz'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "org.odk.collect.android"
        minSdk 21
        compileSdk 34
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resValue("bool", "CRASHLYTICS_ENABLED", "false")
        resValue("string", "GOOGLE_MAPS_API_KEY", "")
        buildConfigField 'String', "MAPBOX_ACCESS_TOKEN", '"' + 1213 + '"'
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize '2048M'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                // https://discuss.circleci.com/t/11207/24
                // it seems any number works, but 1024 - 2048 seem reasonable
                maxHeapSize = "2048M"
            }
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled(true)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            matchingFallbacks = ['release'] // So other modules use release built type for this
        }

        debug {
            debuggable(true)
        }
    }

    flavorDimensions "flavor-type"

    productFlavors {
       /* dev {
            applicationId 'com.mpower.appbuilder.app_builder'
            versionCode 1
            versionName "1.0.0"
            dimension "flavor-type"
            resValue "string", "app_name", "App Builder"
            resValue "string", "default_server_url", "http://clarissa.dev.mpower-social.com:9023/"
        }*/
        dev {
            applicationId 'com.dghs.citizenportal.awaztulun'
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            dimension "flavor-type"
            resValue "string", "app_name", "মোকাবেলা"
            resValue "string", "privacy_url","https://cutt.ly/CevjmvWW";//https://drive.google.com/drive/folders/1cllMD497SYjJ6sUiASl71IOWSAZnLC8C?usp=sharing
            resValue "string", "app_url","https://cutt.ly/devjmaT7";// "https://drive.google.com/drive/folders/1dWwrvVob-i9LeH5LRzs5hGceTlu_3JUD?usp=sharing"
            resValue "string", "default_server_url", "http://192.168.22.59:3000"
             resValue "string", "mokabela_server_url", "https://mokabela.net"

//           resValue "string", "mokabela_server_url", "https://reliefdistributionqa-api.mpower-social.com"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.browser:browser:1.4.0'
    implementation 'androidx.appcompat:appcompat:1.4.1' // Shouldn't be upgraded until https://issuetracker.google.com/issues/141869006 is fixed
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation('androidx.preference:preference-ktx:1.2.0') {
        exclude group: 'androidx.appcompat', module: 'appcompat' // Again because of https://issuetracker.google.com/issues/141869006
    }

    implementation "com.google.android.gms:play-services-auth:20.2.0"
    implementation "com.google.android.gms:play-services-maps:18.1.0"
    implementation "com.google.android.gms:play-services-location:20.0.0"

    implementation 'com.google.firebase:firebase-analytics:21.1.0'

    /*implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:9.2.1'
    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v7:0.6.0'*/
    //implementation("com.mapbox.maps:android:11.6.0")

    implementation("com.google.guava:guava:28.1-android")

    implementation "com.squareup.okhttp3:okhttp:${rootProject.okhttp3Version}"
    implementation 'io.github.rburgst:okhttp-digest:3.1.0'//newer versions require minSdkVersion >= 21

    implementation 'com.github.mohamadian:PersianJodaTime:1.2'
    implementation 'com.github.chanmratekoko:myanmar-calendar:1.0.6.RC3'
    implementation 'bikramsambat:bikram-sambat:1.1.0'
    implementation "com.evernote:android-job:1.4.2"
    //implementation "com.rarepebble:colorpicker:3.0.1"
    implementation "commons-io:commons-io:2.6"
    implementation "net.sf.opencsv:opencsv:2.1"
    implementation("org.opendatakit:opendatakit-javarosa:2.17.0") {
        exclude group: 'joda-time'
        exclude group: 'org.slf4j'
    }
    implementation "com.karumi:dexter:6.2.3"
    implementation "org.osmdroid:osmdroid-android:5.6.4"
    implementation("com.google.api-client:google-api-client-android:1.30.5") { //updating would require minSdkVersion >=19
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.guava'
    }
    implementation("com.google.apis:google-api-services-drive:v3-rev20191108-1.30.3") {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.guava'
    }
    implementation("com.google.apis:google-api-services-sheets:v4-rev20191213-1.30.3") {
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'com.google.guava'
    }

    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation "org.slf4j:slf4j-api:2.0.0-alpha0"
    implementation "com.arcao:slf4j-timber:3.1@aar"

    implementation "com.google.zxing:core:3.5.0" //updating to 3.4.0 requires minSdkVersion >=24 https://github.com/zxing/zxing/releases/tag/zxing-3.4.0
    implementation "com.journeyapps:zxing-android-embedded:4.3.0" //updating would require minSdkVersion >=24
    implementation "net.danlew:android.joda:2.10.14"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Real LeakCanary for debug builds only: notifications, analysis, etc
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.leakyCanaryVersion}"
    // No-Op version of LeakCanary for release builds: no notifications, no analysis, nothing
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakyCanaryVersion}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakyCanaryVersion}"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.leakyCanaryVersion}"

    // Android Architecture Components:
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Dagger:
    implementation "com.google.dagger:dagger:${rootProject.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.daggerVersion}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${rootProject.daggerVersion}" // Needed for injection into Robolectric tests

    // Dagger Android:
    implementation "com.google.dagger:dagger-android:${rootProject.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.daggerVersion}"

    // RxJava 2:
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"

    // Better "Subjects" for Rx:
    implementation "com.jakewharton.rxrelay2:rxrelay:2.1.1"

    // WorkManager for specifying deferrable, asynchronous tasks
    implementation 'androidx.work:work-runtime-ktx:2.7.0'

    // Optional JobDispatcher support so devices with Play Services do better than AlarmManager
    /*implementation("android.arch.work:work-firebase:1.0.0-alpha11") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }*/

    // Makes binding to Views easy:
    implementation "com.jakewharton:butterknife:10.2.1"
    kapt "com.jakewharton:butterknife-compiler:10.2.1"

    // Annotations understood by FindBugs
    compileOnly 'com.google.code.findbugs:annotations:3.0.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // Used to generate documentation screenshots.
    androidTestImplementation "tools.fastlane:screengrab:2.1.1" //updating would require minSdkVersion >=18

    // Testing-only dependencies
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.6.1"

    testImplementation "org.robolectric:robolectric:4.8.1"
    testImplementation 'androidx.test.ext:junit:1.1.3'
    debugImplementation 'androidx.fragment:fragment-testing:1.5.0'
    testImplementation "org.robolectric:shadows-multidex:4.7.3"
    testImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.okhttp3Version}"
    testImplementation "com.squareup.okhttp3:okhttp-tls:${rootProject.okhttp3Version}"

    // power mock (for mocking final methods which is not handled by mockito)
    testImplementation "org.powermock:powermock-module-junit4:2.0.4"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.4"

    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation "org.json:json:20190722"

    androidTestImplementation "org.mockito:mockito-android:4.5.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation("androidx.test.espresso:espresso-intents:3.4.0") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.okhttp3Version}"

    androidTestImplementation "android.arch.work:work-testing:1.0.1"
    implementation 'com.github.smart-fun:XmlToJson:1.4.5'
    implementation 'com.google.code.gson:gson:2.9.0'


    //Awaz Tulun
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.1'

    //dagger2
    implementation 'com.google.dagger:dagger:2.44'
    kapt 'com.google.dagger:dagger-android-processor:2.40.1'
    kapt 'com.google.dagger:dagger-compiler:2.44'
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0"
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'androidx.multidex:multidex:2.0.0'
    //coroutins
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.google.android.gms:play-services-location:21.0.0'
    // Firebase Cloud Messaging (Java)
    implementation 'com.google.firebase:firebase-messaging'

    // Firebase Cloud Messaging (Kotlin)
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation platform('com.google.firebase:firebase-bom:28.3.0')
    //rx
    implementation "io.reactivex.rxjava2:rxkotlin:2.1.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //OSM
    implementation 'org.osmdroid:osmdroid-android:6.1.18'
    implementation "com.karumi:dexter:6.2.3"
    //compressor
    implementation 'id.zelory:compressor:2.1.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'
}

apply plugin: 'com.google.gms.google-services'
